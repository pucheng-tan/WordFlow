{"created": "2020-11-14 14:57:48.353284", "duration": 3.1284263134002686, "exitcode": 0, "root": "group2", "summary": {"passed": 10, "xpassed": 4, "total": 14, "collected": 14}, "tests": [{"nodeid": "services/test_api_service.py::test_get_valid[params0-expected_references0]", "outcome": "passed", "metadata": {"id": "UT API.1", "description": "Testing various valid 'get' queries with the API: History of specific user: filter with <, ==, and in"}}, {"nodeid": "services/test_api_service.py::test_get_valid[params1-expected_references1]", "outcome": "passed", "metadata": {"id": "UT API.1", "description": "Testing various valid 'get' queries with the API: get_all for History collection: filter by the school, sort ascending the assignment ID. Test that passing in a sort which should be incompatible with the where clauses is handled gracefully"}}, {"nodeid": "services/test_api_service.py::test_get_valid[params2-expected_references2]", "outcome": "passed", "metadata": {"id": "UT API.1", "description": "Testing various valid 'get' queries with the API: filter collection by array contains specified document reference"}}, {"nodeid": "services/test_api_service.py::test_get_valid[params3-expected_references3]", "outcome": "passed", "metadata": {"id": "UT API.1", "description": "Testing various valid 'get' queries with the API: get a specific document by its path/reference"}}, {"nodeid": "services/test_api_service.py::test_get_valid[params4-expected_references4]", "outcome": "passed", "metadata": {"id": "UT API.1", "description": "Testing various valid 'get' queries with the API: get all documents in a collection with a descending sort"}}, {"nodeid": "services/test_api_service.py::test_get_invalid[params0]", "outcome": "passed", "metadata": {"id": "UT API.2", "description": "Testing 'get' queries return expected errors with invalid params: invalid limit"}}, {"nodeid": "services/test_api_service.py::test_get_invalid[params1]", "outcome": "passed", "metadata": {"id": "UT API.2", "description": "Testing 'get' queries return expected errors with invalid params: where clause should be nested"}}, {"nodeid": "services/test_api_service.py::test_get_invalid[params2]", "outcome": "passed", "metadata": {"id": "UT API.2", "description": "Testing 'get' queries return expected errors with invalid params: "}}, {"nodeid": "services/test_api_service.py::test_post_valid", "outcome": "passed", "metadata": {"id": "UT API.3", "description": "Testing 'post' queries with all the datatypes available"}}, {"nodeid": "services/test_user_management.py::test_create_user[valid user-success0]", "lineno": 6, "outcome": "xpassed", "keywords": ["valid user-success0", "test_create_user[valid user-success0]", "pytestmark", "xfail", "group2", "services/test_user_management.py", "parametrize"], "setup": {"duration": 0.000801099999999888, "outcome": "passed"}, "call": {"duration": 0.0005477000000002619, "outcome": "passed"}, "teardown": {"duration": 0.00048499999999984666, "outcome": "passed"}}, {"nodeid": "services/test_user_management.py::test_create_user[valid user-success1]", "lineno": 6, "outcome": "xpassed", "keywords": ["services/test_user_management.py", "pytestmark", "xfail", "group2", "valid user-success1", "parametrize", "test_create_user[valid user-success1]"], "setup": {"duration": 0.0010124999999998607, "outcome": "passed"}, "call": {"duration": 0.0006203000000000181, "outcome": "passed"}, "teardown": {"duration": 0.000436800000000126, "outcome": "passed"}}, {"nodeid": "services/test_user_management.py::test_create_user[invalid user-error]", "lineno": 6, "outcome": "xpassed", "keywords": ["group2", "pytestmark", "xfail", "test_create_user[invalid user-error]", "invalid user-error", "services/test_user_management.py", "parametrize"], "setup": {"duration": 0.0005618000000002787, "outcome": "passed"}, "call": {"duration": 0.0002606000000002773, "outcome": "passed"}, "teardown": {"duration": 0.0003454000000000512, "outcome": "passed"}}, {"nodeid": "services/test_user_management.py::test_login", "lineno": 15, "outcome": "xpassed", "keywords": ["pytestmark", "xfail", "group2", "services/test_user_management.py", "test_login"], "setup": {"duration": 0.00029990000000035266, "outcome": "passed"}, "call": {"duration": 0.0002572000000000685, "outcome": "passed"}, "teardown": {"duration": 0.0005244000000002025, "outcome": "passed"}}, {"nodeid": "services/test_user_service.py::test_create_user_profile[user0-Test_Post_School]", "outcome": "passed", "metadata": ""}], "warnings": [{"message": "the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses", "category": "DeprecationWarning", "when": "collect", "filename": "d:\\cst classes\\repos\\usask\\group2\\env\\lib\\site-packages\\win32\\lib\\pywintypes.py", "lineno": 2}], "success": false}