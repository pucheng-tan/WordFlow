{"created": "2020-12-05 23:51:31.869003", "duration": 2.1418559551239014, "exitcode": 1, "root": "/Users/Temperature/group2/group2", "summary": {"passed": 4, "failed": 2, "total": 6, "collected": 6}, "tests": [{"nodeid": "services/test_school_service.py::test_get_user_documents_by_privilege[Usask-0-1]", "outcome": "passed", "metadata": ""}, {"nodeid": "services/test_school_service.py::test_get_user_documents_by_privilege[Usask-1-0]", "outcome": "passed", "metadata": ""}, {"nodeid": "services/test_school_service.py::test_get_user_documents_by_privilege[Usask-2-1]", "outcome": "passed", "metadata": ""}, {"nodeid": "services/test_school_service.py::test_get_user_documents_by_privilege[3p1U6xAvKic1RvXMl5nJ-0-4]", "outcome": "passed", "metadata": ""}, {"nodeid": "services/test_school_service.py::test_get_user_documents_by_privilege[3p1U6xAvKic1RvXMl5nJ-1-4]", "lineno": 8, "outcome": "failed", "keywords": ["test_get_user_documents_by_privilege[3p1U6xAvKic1RvXMl5nJ-1-4]", "services/test_school_service.py", "group2", "pytestmark", "3p1U6xAvKic1RvXMl5nJ-1-4", "api_call", "parametrize"], "setup": {"duration": 0.000507814999999745, "outcome": "passed"}, "call": {"duration": 0.17929713199999986, "outcome": "failed", "crash": {"path": "/Users/Temperature/group2/group2/services/test_school_service.py", "lineno": 21, "message": "assert 5 == 4\n  +5\n  -4"}, "traceback": [{"path": "services/test_school_service.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "test_school_id = '3p1U6xAvKic1RvXMl5nJ', privilege_level = 1, expected_result = 4\n\n    @pytest.mark.api_call\n    @pytest.mark.parametrize(\"test_school_id,privilege_level,expected_result\", [\n            (\"Usask\", 0, 1),\n            (\"Usask\", 1, 0),\n            (\"Usask\", 2, 1),\n            (\"3p1U6xAvKic1RvXMl5nJ\", 0, 4),\n            (\"3p1U6xAvKic1RvXMl5nJ\", 1, 4),\n            (\"3p1U6xAvKic1RvXMl5nJ\", 2, 8)])\n    \n    def test_get_user_documents_by_privilege(test_school_id, privilege_level, expected_result):\n        user_documents = school_service.get_user_documents_by_privilege(test_school_id, privilege_level)\n    \n>       assert(len(user_documents) == expected_result)\nE       assert 5 == 4\nE         +5\nE         -4\n\nservices/test_school_service.py:21: AssertionError"}, "teardown": {"duration": 0.00045131800000008937, "outcome": "passed"}}, {"nodeid": "services/test_school_service.py::test_get_user_documents_by_privilege[3p1U6xAvKic1RvXMl5nJ-2-8]", "lineno": 8, "outcome": "failed", "keywords": ["services/test_school_service.py", "group2", "pytestmark", "3p1U6xAvKic1RvXMl5nJ-2-8", "api_call", "test_get_user_documents_by_privilege[3p1U6xAvKic1RvXMl5nJ-2-8]", "parametrize"], "setup": {"duration": 0.0005457360000002964, "outcome": "passed"}, "call": {"duration": 0.11479845099999997, "outcome": "failed", "crash": {"path": "/Users/Temperature/group2/group2/services/test_school_service.py", "lineno": 21, "message": "assert 7 == 8\n  +7\n  -8"}, "traceback": [{"path": "services/test_school_service.py", "lineno": 21, "message": "AssertionError"}], "longrepr": "test_school_id = '3p1U6xAvKic1RvXMl5nJ', privilege_level = 2, expected_result = 8\n\n    @pytest.mark.api_call\n    @pytest.mark.parametrize(\"test_school_id,privilege_level,expected_result\", [\n            (\"Usask\", 0, 1),\n            (\"Usask\", 1, 0),\n            (\"Usask\", 2, 1),\n            (\"3p1U6xAvKic1RvXMl5nJ\", 0, 4),\n            (\"3p1U6xAvKic1RvXMl5nJ\", 1, 4),\n            (\"3p1U6xAvKic1RvXMl5nJ\", 2, 8)])\n    \n    def test_get_user_documents_by_privilege(test_school_id, privilege_level, expected_result):\n        user_documents = school_service.get_user_documents_by_privilege(test_school_id, privilege_level)\n    \n>       assert(len(user_documents) == expected_result)\nE       assert 7 == 8\nE         +7\nE         -8\n\nservices/test_school_service.py:21: AssertionError"}, "teardown": {"duration": 0.00036193899999981127, "outcome": "passed"}}], "success": false}